- hosts: default
  become: true

  vars:
    k3s_version: "v1.20.0+k3s2"
    k3s_installer_sum: "sha1:d302e35feaf9580cbc687c97119e377f81882823"
    imagedeploy_version: "0.0.0"

  tasks:

    # Private registry

    - name: docker-registry is installed
      apt:
        name: docker-registry
        state: present

    - name: registry hostname is registered
      lineinfile:
        path: /etc/hosts
        line: "{{ ansible_host }} registry"

    # Docker

    - name: apt-key requirements are installed
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - gnupg-agent
        state: present

    - name: apt key for docker repository is registered
      apt_key:
        id: 9dc858229fc7dd38854ae2d88d81803c0ebfcd88
        url: https://download.docker.com/linux/debian/gpg
        state: present

    - name: docker repository is registered
      apt_repository:
        repo: >
          deb [arch=amd64]
          https://download.docker.com/linux/debian
          {{ ansible_lsb.codename }} stable
        state: present

    - name: docker is installed
      apt:
        name: docker-ce
        state: present

    - name: docker insecure registry is configured
      copy:
        content: |
          {"insecure-registries": ["registry:5000"]}
        dest: /etc/docker/daemon.json
      notify: restart docker

    - name: vagrant user can use docker
      user:
        name: vagrant
        groups: docker
        append: true

    # K3s

    - name: k3s install script is present
      get_url:
        url: https://github.com/k3s-io/k3s/raw/{{ k3s_version }}/install.sh
        checksum: "{{ k3s_installer_sum }}"
        dest: /root/k3s-install.sh
        mode: 0744

    - name: k3s config directory is present
      file:
        path: /etc/rancher/k3s
        state: directory

    - name: k3s server config is up
      copy:
        content: |
          node-external-ip: "{{ external_address }}"
          write-kubeconfig-mode: "644"
        dest: /etc/rancher/k3s/config.yaml
      notify: restart k3s

    - name: k3s registries config is up
      copy:
        content: |
          mirrors:
            "registry:5000":
              endpoint:
                - "http://registry:5000"
        dest: /etc/rancher/k3s/registries.yaml
      notify: restart k3s

    - name: k3s is installed
      command: /root/k3s-install.sh
      args:
        creates: /usr/local/bin/k3s
      environment:
        INSTALL_K3S_VERSION: "{{ k3s_version }}"

    # Utilities

    - name: git is installed
      apt:
        name: git
        state: present

    - name: imagedeploy release is downloaded
      unarchive:
        src: https://github.com/snsinfu/imagedeploy/releases/download/v{{ imagedeploy_version }}/imagedeploy-{{ imagedeploy_version }}-linux-amd64.tar.gz
        dest: /usr/local/bin
        creates: /usr/local/bin/imagedeploy
        remote_src: true

  handlers:
    - name: restart docker
      service:
        name: docker
        state: restarted

    - name: restart k3s
      service:
        name: k3s
        state: restarted


- hosts: default
  become: false

  tasks:
    - name: myapp code is up
      copy:
        src: myapp
        dest: .
